/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerPerceptronSimple;
import Model.IGraficar;
import Model.MensajeRespuesta;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author geile
 */
public class Principal extends javax.swing.JFrame implements IGraficar {

    ControllerPerceptronSimple controllerPerceptronSimple = new ControllerPerceptronSimple();
//    PerceptronSimple perceptronSimple;
//    int[][] w;
//    int[] u;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        btnCargarEntradasSalida = new javax.swing.JButton();
        labelEntradas = new javax.swing.JLabel();
        labelSalidas = new javax.swing.JLabel();
        labelPatrones = new javax.swing.JLabel();
        btnInicializarPesosUmbrales = new javax.swing.JButton();
        txtNumeroIteraciones = new javax.swing.JTextField();
        txtErrorMaximoPermitido = new javax.swing.JTextField();
        txtTasaAprendizaje = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnEntrenar = new javax.swing.JButton();
        panelGraficaEntrenamiento = new javax.swing.JPanel();
        panelGraficoPesosUmbrales = new javax.swing.JPanel();
        btnGuardarConfiguracionActual = new javax.swing.JButton();
        progressBarProgreso = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(624, 559));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnCargarEntradasSalida.setText("Cargar Datos");
        btnCargarEntradasSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarEntradasSalidaActionPerformed(evt);
            }
        });

        labelEntradas.setText("Entradas: 0");

        labelSalidas.setText("Salidas: 0");

        labelPatrones.setText("Patrones: 0");

        btnInicializarPesosUmbrales.setText("Inicializar Pesos y Umbrales");
        btnInicializarPesosUmbrales.setEnabled(false);
        btnInicializarPesosUmbrales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicializarPesosUmbralesActionPerformed(evt);
            }
        });

        txtNumeroIteraciones.setText("1000");
        txtNumeroIteraciones.setEnabled(false);

        txtErrorMaximoPermitido.setText("0");
        txtErrorMaximoPermitido.setEnabled(false);

        txtTasaAprendizaje.setText("1");
        txtTasaAprendizaje.setEnabled(false);

        jLabel1.setText("Numero Iteraciones");

        jLabel2.setText("Error Maximo");

        jLabel3.setText("Tasa de Aprendizaje");

        btnEntrenar.setText("Iniciar Entrenamiento");
        btnEntrenar.setEnabled(false);
        btnEntrenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrenarActionPerformed(evt);
            }
        });

        panelGraficaEntrenamiento.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelGraficaEntrenamiento.setLayout(new java.awt.BorderLayout());

        panelGraficoPesosUmbrales.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout panelGraficoPesosUmbralesLayout = new javax.swing.GroupLayout(panelGraficoPesosUmbrales);
        panelGraficoPesosUmbrales.setLayout(panelGraficoPesosUmbralesLayout);
        panelGraficoPesosUmbralesLayout.setHorizontalGroup(
            panelGraficoPesosUmbralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelGraficoPesosUmbralesLayout.setVerticalGroup(
            panelGraficoPesosUmbralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );

        btnGuardarConfiguracionActual.setText("Guardar configuracion actual");
        btnGuardarConfiguracionActual.setEnabled(false);
        btnGuardarConfiguracionActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarConfiguracionActualActionPerformed(evt);
            }
        });

        progressBarProgreso.setMaximum(1000000);
        progressBarProgreso.setValue(0);
        progressBarProgreso.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelGraficoPesosUmbrales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEntrenar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardarConfiguracionActual))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCargarEntradasSalida)
                                .addGap(32, 32, 32)
                                .addComponent(labelEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSalidas, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelPatrones, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnInicializarPesosUmbrales)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtNumeroIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtErrorMaximoPermitido, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtTasaAprendizaje, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6)
                .addComponent(panelGraficaEntrenamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(progressBarProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelGraficaEntrenamiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSalidas, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPatrones, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCargarEntradasSalida))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInicializarPesosUmbrales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumeroIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtErrorMaximoPermitido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTasaAprendizaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEntrenar)
                            .addComponent(btnGuardarConfiguracionActual))
                        .addGap(18, 18, 18)
                        .addComponent(panelGraficoPesosUmbrales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(progressBarProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarEntradasSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarEntradasSalidaActionPerformed
        // TODO add your handling code here:
        inicializarGrafica();
        JFileChooser fileChooser = new JFileChooser();

        //leen el archivo 
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            MensajeRespuesta mensajeRespuesta = controllerPerceptronSimple.cargarDatos(file);
            JOptionPane.showMessageDialog(this, mensajeRespuesta.getMensaje(), "Cargando Archivos", mensajeRespuesta.getTipoMensaje());
            if (mensajeRespuesta.isEstado()) {
                btnInicializarPesosUmbrales.setEnabled(true);
                txtErrorMaximoPermitido.setEnabled(true);
                txtNumeroIteraciones.setEnabled(true);
                txtTasaAprendizaje.setEnabled(true);
            }
            
            labelEntradas.setText("Entradas: "+controllerPerceptronSimple.getPerceptronSimple().getM());
            labelPatrones.setText("Patrones: "+controllerPerceptronSimple.getPerceptronSimple().getPatrones());
            labelSalidas.setText("Salidas: "+controllerPerceptronSimple.getPerceptronSimple().getN());
        } else {
            JOptionPane.showMessageDialog(null, "\nOpeeracion cancelada por el usuario", "ADVERTENCIA!!!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCargarEntradasSalidaActionPerformed

    private void btnInicializarPesosUmbralesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicializarPesosUmbralesActionPerformed
        // TODO add your handling code here:
        MensajeRespuesta mensajeRespuesta = controllerPerceptronSimple.inicializarPesosUmbrales();
        JOptionPane.showMessageDialog(this, mensajeRespuesta.getMensaje(), "Incializacion de pesos y umbrales", mensajeRespuesta.getTipoMensaje());
        if (mensajeRespuesta.isEstado()) {
            btnEntrenar.setEnabled(true);
        }
    }//GEN-LAST:event_btnInicializarPesosUmbralesActionPerformed

    private void btnEntrenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrenarActionPerformed
        // TODO add your handling code here:
        int numeroIteraciones = Integer.parseInt(txtNumeroIteraciones.getText());
        double erms = Double.parseDouble(txtErrorMaximoPermitido.getText());
        double tasa = Double.parseDouble(txtTasaAprendizaje.getText());
        progressBarProgreso.setMaximum(numeroIteraciones);
       
        controllerPerceptronSimple.entrenar(numeroIteraciones, erms, tasa, this);
       
        btnGuardarConfiguracionActual.setEnabled(true);
        
    }//GEN-LAST:event_btnEntrenarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        inicializarGrafica();
    }//GEN-LAST:event_formWindowOpened

    public void inicializarGrafica() {
        // TODO add your handling code here:
        graficarErmsIteracion(new ArrayList(), 0.0);
        double[][] w = {{0}};
        double[] u = {0};
        graficarPesosUmbrales(w, u);
    }

    private void btnGuardarConfiguracionActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarConfiguracionActualActionPerformed
        // TODO add your handling code here:
        if (controllerPerceptronSimple.getPerceptronSimple() != null) {
            controllerPerceptronSimple.guardar(controllerPerceptronSimple.getPerceptronSimple(), "Taller");
        }
    }//GEN-LAST:event_btnGuardarConfiguracionActualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarEntradasSalida;
    private javax.swing.JButton btnEntrenar;
    private javax.swing.JButton btnGuardarConfiguracionActual;
    private javax.swing.JButton btnInicializarPesosUmbrales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel labelEntradas;
    private javax.swing.JLabel labelPatrones;
    private javax.swing.JLabel labelSalidas;
    private javax.swing.JPanel panelGraficaEntrenamiento;
    private javax.swing.JPanel panelGraficoPesosUmbrales;
    private javax.swing.JProgressBar progressBarProgreso;
    private javax.swing.JTextField txtErrorMaximoPermitido;
    private javax.swing.JTextField txtNumeroIteraciones;
    private javax.swing.JTextField txtTasaAprendizaje;
    // End of variables declaration//GEN-END:variables

    @Override
    public void graficarErmsIteracion(ArrayList listaErms, double errorMaximoPermitido) {
        controllerPerceptronSimple.graficarErmsIteracion(panelGraficaEntrenamiento, listaErms, errorMaximoPermitido);
    }

    @Override
    public void graficarPesosUmbrales(double[][] w, double[] u) {
        controllerPerceptronSimple.graficarPesosUmbrales(panelGraficoPesosUmbrales, w, u);
    }

    @Override
    public void Progreso(int i) {
        System.out.println("este es i "+i);
        progressBarProgreso.setValue(i);
    }

    @Override
    public void finalizar() {
        if (controllerPerceptronSimple.getPerceptronSimple().isEstado()) {
            JOptionPane.showMessageDialog(this, "Entrenamiento Correcto", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No se Ha logrado el entrenamiento", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }

}
